import Head from 'next/head'
import { NextPage } from 'next'
import { GetStaticProps } from 'next'
import { markdownToHtml } from '@/lib/markdownToHtml'
import { Item } from '@/types'
import { IMeta, Meta } from '@/components/Meta'
import React, { useRef, useState } from 'react'
import { Button } from '@/components/Button'
import { Emoji } from '@/components/Emoji'
import { OpinionForm } from '@/components/OpinionForm'
import Link from 'next/link'
import { Section } from '@/components/Section'
import { Layout } from '@/components/Layout'
import { useMobile } from '@/hooks/useMobile'

interface ILandingProps {
    data: Item[]
    meta: IMeta
}

const Landing: NextPage<ILandingProps> = ({ meta }) => {
    const [state, setState] = useState<'start' | 'form' | 'finish'>('start')
    const refContainer = useRef<HTMLDivElement>(null)
    const isMobile = useMobile()

    return (
        <>

            <Head>
                <title>–ú–æ–π–∑–∞–ª–∏–≤.—Ä—Ñ</title>
                <Meta meta={meta} />
            </Head>
            <span ref={refContainer} />
            <Layout>
                <Section style={{
                    flex: '1 0 100%',
                    paddingTop: 0,
                    paddingBottom: 0,
                    display: 'flex',
                    justifyContent: 'center',
                }}>
                    <div
                        style={{
                            display: 'flex',
                            flexFlow: state == 'start' ? 'row' : 'column',

                            borderLeft: state !== 'start' && !isMobile && 'solid 1px black',
                            borderRight: state !== 'start' && !isMobile && 'solid 1px black',
                            padding: state == 'form' && !isMobile && '0 1rem',
                        }}
                    >
                        {state == 'start' ? (
                            <div style={{
                                display: 'flex',
                                flexDirection: 'column',
                                borderLeft: !isMobile && 'solid 1px black',
                                borderRight: !isMobile && 'solid 1px black',
                                padding: isMobile ? '1% 0' : '1% 1rem',
                            }}>
                                <p>
                                    –î–æ—Ä–æ–≥–∏–µ –º—É—Ä–º–∞–Ω—á–∞–Ω–µ, —Å–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã –∑–¥–µ—Å—å –∏ —Ö–æ—Ç–∏—Ç–µ —á–∞—â–µ –ª—é–±–æ–≤–∞—Ç—å—Å—è –≤–∏–¥–∞–º–∏ –Ω–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞!
                        </p>
                                <p>
                                    –ü—Ä–æ–µ–∫—Ç –ú–û–ô–ó–ê–õ–ò–í.–†–§ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Ç–æ, —á—Ç–æ–±—ã –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –≤—Å–µ –≥–æ—Ä–æ–¥—Å–∫–∏–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏, –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ –∑–∞–ª–∏–≤, –≤ —Ç–∏—Ö–∏–µ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å –¥–ª—è –∂–∏—Ç–µ–ª–µ–π, –∞ –Ω–µ –¥–ª—è —Ç—É—Ä–∏—Å—Ç–æ–≤. –°–µ–π—á–∞—Å –º—ã –ø—Ä–æ–≤–æ–¥–∏–º –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Å–µ–º–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–ª–æ—â–∞–¥–æ–∫ –∫–æ—Ç–æ—Ä—ã–µ –ø–ª–∞–Ω–∏—Ä—É–µ–º —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —É–∂–µ —ç—Ç–∏–º –ª–µ—Ç–æ–º.
                        </p>
                                <p>
                                    –ù–∏–∫—Ç–æ –ª—É—á—à–µ —Å–∞–º–∏—Ö –≥–æ—Ä–æ–∂–∞–Ω –Ω–µ –∑–Ω–∞–µ—Ç –æ –∑–∞–ª–∏–≤–µ, –æ –≤–∏–¥–æ–≤—ã—Ö –ø–ª–æ—â–∞–¥–∫–∞—Ö, –∏ –æ —Ç–æ–º, —á—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≥–æ—Ä–æ–¥—É! –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Ç–µ—Ö –≤–∏–¥–æ–≤—ã—Ö —Ç–æ—á–∫–∞—Ö, —Ä—è–¥–æ–º —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –∂–∏–≤–µ—Ç–µ –∏–ª–∏ —á–∞—Å—Ç–æ –±—ã–≤–∞–µ—Ç–µ. –ö–∞–∫ —ç—Ç–∏ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å–µ–π—á–∞—Å –∏ –∫–∞–∫–∏–º–∏ –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã —Å—Ç–∞—Ç—å –≤ –±—É–¥—É—â–µ–º?
                        </p>
                                <p>
                                    –ú—ã –±—É–¥–µ–º –ø—Ä–∏–∑–Ω–∞—Ç–µ–ª—å–Ω—ã —É—Å–ª—ã—à–∞—Ç—å –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤–∞—à–∏ –∏–¥–µ–∏ –≤–º–µ—Å—Ç–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —Å—Ç–∞–Ω—É—Ç –æ—Å–Ω–æ–≤–æ–π –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –ø–æ –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤—É –¥–ª—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä–æ–≤.
                        </p>
                                <p>
                                    –í—ã –º–æ–∂–µ—Ç–µ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç–æ—á–µ–∫ –≤–Ω—É—Ç—Ä–∏ –æ–ø—Ä–æ—Å–∞, –µ—Å–ª–∏ –≤–∞–º –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –ø–ª–æ—â–∞–¥–∫–∞ –≤—ã–±—Ä–∞–Ω–∞ –Ω–µ—É–¥–∞—á–Ω–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∞ —Å–ª–∏—à–∫–æ–º –±–ª–∏–∑–∫–æ –∫ –¥–æ–º–∞–º –∏–ª–∏ –Ω–∞ –º–µ—Å—Ç–µ –≤–∞—à–µ–π –ø–∞—Ä–∫–æ–≤–∫–∏. –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∞–±—Å–æ–ª—é—Ç–Ω–æ –¥—Ä—É–≥–∏–µ –≤–∏–¥–æ–≤—ã–µ —Ç–æ—á–∫–∏ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞ —Å–∞–π—Ç–µ –Ω–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞: –º–æ–π–∑–∞–ª–∏–≤.—Ä—Ñ.
                        </p>
                                <p>
                                    –î–µ–ª–∏—Ç–µ—Å—å –æ–ø—Ä–æ—Å–æ–º, —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –∏ —É—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –æ–±—Å—É–∂–¥–µ–Ω–∏–∏ –≤ <Link href='https://vk.com/moizaliv'><a>–≥—Ä—É–ø–ø–µ</a></Link> !
                        </p>
                                <Button
                                    onClick={() => setState('form')}
                                    theme={'default'}
                                    size='big'
                                    style={{
                                        marginTop: '2rem',
                                        marginBottom: '2rem',
                                        width: 'fit-content',
                                        alignSelf: 'center',
                                    }}
                                >
                                    <Emoji name='üèÅ' style={{ marginRight: '.5em' }} />
                                    {'–ù–ê–ß–ê–¢–¨ –û–ü–†–û–°'}
                                    <Emoji name='‚úÖ' style={{ marginLeft: '.5em' }} />
                                </Button>
                            </div>
                        ) : state == 'finish' ? (
                            <div style={{
                                height: '100%',
                                display: 'flex',
                                flexDirection: 'column',
                                alignItems: 'center',
                                justifyContent: 'center',
                            }}>
                                <div style={{
                                    paddingBottom: '3rem',
                                    textAlign: 'center',
                                }}>
                                    <div style={{ fontSize: '56px', lineHeight: '56px', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>
                                        <span style={{ padding: '.5em 0' }}>
                                            <Emoji name='‚ù§Ô∏è' />
                                            <Emoji name='üíô' />
                                            <Emoji name='üíñ' />
                                        </span>
                                –°–ø–∞—Å–∏–±–æ, –í–∞—à –æ—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
                                <span style={{ padding: '.5em 0' }}>
                                            <Emoji name='üëç' />
                                            <Emoji name='üëå' />
                                            <Emoji name='üëè' />
                                        </span>
                                    </div>
                                </div>
                                <Link href='/'>
                                    <Button
                                        size='big'
                                        style={{
                                            width: 'fit-content',
                                        }}
                                    >
                                        –ó–ê–í–ï–†–®–ò–¢–¨
                            </Button>
                                </Link>
                            </div>
                        ) : (
                            <OpinionForm
                                showFinish={() => setState('finish')}
                                scrollTop={() => {
                                    if (!refContainer.current) return
                                    refContainer.current.scrollIntoView({ behavior: 'smooth' })
                                }}
                            />
                        )}
                    </div>
                </Section>
            </Layout>
        </>
    )
}

export const getStaticProps: GetStaticProps = async (context) => {
    const res = await fetch(`https://unit.tmshv.com/mur-events`)
    const data = await res.json()
    const parsed: Item[] = await Promise.all(
        data.map(async x => ({
            ...x,
            post: await markdownToHtml(x.post)
        }))
    )

    const meta: IMeta = {
        title: '–ú–û–ô–ó–ê–õ–ò–í.–†–§',
        description: '–î–æ—Ä–æ–≥–∏–µ –ú—É—Ä–º–∞–Ω—á–∞–Ω–µ, –¥–∞–≤–∞–π—Ç–µ —á–∞—â–µ –ª—é–±–æ–≤–∞—Ç—å—Å—è –≤–∏–¥–∞–º–∏ –Ω–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞!',
        image: 'https://–º–æ–π–∑–∞–ª–∏–≤.—Ä—Ñ/static/meta.jpg',
        imageWidth: 911,
        imageHeight: 1023,

        url: 'https://–º–æ–π–∑–∞–ª–∏–≤.—Ä—Ñ/',
        siteName: '–î–æ—Ä–æ–≥–∏–µ –ú—É—Ä–º–∞–Ω—á–∞–Ω–µ, –¥–∞–≤–∞–π—Ç–µ —á–∞—â–µ –ª—é–±–æ–≤–∞—Ç—å—Å—è –≤–∏–¥–∞–º–∏ –Ω–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞!',
        locale: 'ru_RU',
        type: 'website',
        domain: 'https://–º–æ–π–∑–∞–ª–∏–≤.—Ä—Ñ',

        twitterCard: 'summary_large_image',
        twitterSite: '@',
        twitterCreator: '@tmshv',
    }

    return {
        props: {
            data: parsed,
            meta
        }
    }
}

export default Landing
