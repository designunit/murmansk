import s from './styles.module.css'
import cx from 'classnames'
import { Controller, useForm, useWatch } from 'react-hook-form'
import React, { useCallback, forwardRef, useState, ReactElement, useEffect } from 'react'
import { Button } from '../Button'
import Image from 'next/image'
import { useEffectOnce } from 'react-use'
import { Emoji } from '../Emoji'

const Row: React.SFC = props => (
    <div className={s.row}>
        {props.children}
    </div>
)

const Space: React.SFC = props => (
    <i className={s.space}>
        {props.children}
    </i>
)

type InputProps = React.InputHTMLAttributes<HTMLInputElement>
const Input = forwardRef<HTMLInputElement, InputProps>((props, ref) => (
    <input
        {...props}
        ref={ref}
        className={cx(s.field, props.className)}
    />
))

type TextAreaProps = React.TextareaHTMLAttributes<HTMLTextAreaElement>
const TextArea = forwardRef<HTMLTextAreaElement, TextAreaProps>((props, ref) => (
    <textarea
        {...props}
        ref={ref}
        className={cx(s.field, props.className)}
    />
))

type FormProps = React.DetailedHTMLProps<React.FormHTMLAttributes<HTMLFormElement>, HTMLFormElement>
const Form = forwardRef<HTMLFormElement, FormProps>((props, ref) => (
    <form
        {...props}
        ref={ref}
        className={cx(s.form, props.className)}
    />
))

interface QuestionProps { head: ReactElement | string, required?: boolean, caption?: string }
const Question: React.FC<QuestionProps> = ({ head, children, required = true, caption }) => (
    <div className={s.question}>
        <div className={s.questionHead}>
            {required && <Required />}
            {head}
        </div>
        {caption && (
            <p className={s.questionCaption}>
                {caption}
            </p>
        )}
        {children}
    </div>
)

const Radios = forwardRef<HTMLFormElement | any, any>(({ data, name, register, errors, checkbox = false, userAnwser = false, required = true }, ref) => {
    const [state, setState] = useState('')
    const [checked, setChecked] = useState(false)
    const [checkedArr, setCheackedArr] = useState(data.map(x => false))
    return (
        <>
            <div className={s.radio}>
                {/* @ts-ignore */}
                {data.map((x, i) => (
                    x && <label key={i} style={{
                        display: 'flex',
                        alignItems: 'flex-start',
                    }}>
                        <div style={{ position: 'relative' }}>
                            {(
                                <Emoji name={checkbox ?
                                    checkedArr[i] ? 'üåû' : 'üî≤'
                                    : checkedArr[i] ? 'üòª' : 'üîò'
                                }
                                    style={{
                                        position: 'absolute',
                                        left: checkbox ? 0 : 2,
                                        pointerEvents: 'none',
                                        width: '1.25em',
                                        height: '1.25em',
                                    }} />
                            )}
                            <input name={name} type={checkbox ? 'checkbox' : 'radio'} value={x} ref={register(required && { required: '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ' })}
                                onChange={e => setCheackedArr(checkedArr.map((j, k) =>
                                    k == i ? e.target.checked : (checkbox ? j : false)
                                ))}
                                style={{
                                    width: '1.25em',
                                    height: '1.25em',
                                    marginRight: 0,
                                }}
                            />
                        </div>
                        <span style={{ marginLeft: 12 }}>
                            {x}
                        </span>
                    </label>
                ))}
                {userAnwser && (
                    <label style={{ position: 'relative' }}>
                        <Emoji name={checked ? 'üåû' : 'üî≤'} style={{
                            position: 'absolute',
                            top: `calc(50% - ${checkbox ? '5px' : '5px'})`,
                            left: checkbox ? 0 : 1,
                            transform: 'translateY(-50%)',
                            pointerEvents: 'none',
                            width: '1.25em',
                            height: '1.25em',
                        }} />
                        <input onChange={() => setChecked(!checked)} checked={checked} name={name} type={checkbox ? 'checkbox' : 'radio'} value={state} ref={register({ required: '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ' })} />
                        <Input
                            onChange={(e) => {
                                setState(e.target.value)
                                setChecked(true)
                            }}
                            style={{
                                padding: '0 8px',
                                borderWidth: '1px',
                            }}
                            placeholder='–î—Ä—É–≥–æ–µ...'
                        />
                    </label>
                )}
            </div>
            {errors?.[name] && (
                <p className={cx(s.caption, s.error)}>
                    {errors[name].message}
                </p>
            )}
        </>
    )
})

const Required = () => (
    <span style={{ color: 'tomato' }}>*</span>
)

// @ts-ignore
const Arrow = ({ className }) => (
    <svg className={cx(s.stepButtonRegular, s.arrow, className)} viewBox="0 0 22 34" fill="none" xmlns="http://www.w3.org/2000/svg" >
        <path d="M21.6092 16.9793L6.21477 30.9051L6.09009 3.19255L21.6092 16.9793Z" fill='var(--color-fill)' />
        <line x1="21.3275" y1="17.3778" x2="6.32748" y2="30.3778" stroke='var(--color-border)' strokeWidth='.75' />
        <line x1="6.34117" y1="3.63447" x2="21.3412" y2="17.6345" stroke='var(--color-border)' strokeWidth='.75' />
    </svg>

)

const pointNames = [
    '1. –ê–±—Ä–∞–º-–º—ã—Å',
    '2. –ì–æ—Ä–∞ –ì–æ—Ä–µ–ª–∞—è',
    '3. –°–æ–ø–∫–∞ –î–æ—Å—Ç–æ–µ–≤—Å–∫–æ–≥–æ',
    '4. –°–∫–ª–æ–Ω –ö–∞—Ä–ª–∞ –õ–∏–±–∫–Ω–µ—Ö—Ç–∞',
    '5. –ö–∏–ª—å–¥–∏–Ω—Å–∫–∞—è –ø–ª–æ—â–∞–¥–∫–∞',
    '6. –ü—É—Å—Ç—ã—Ä—å –ú–∞—è–∫–æ–≤—Å–∫–æ–≥–æ',
    '7. –í–∏–¥–æ–≤–∞—è –°–µ–≤–µ—Ä–Ω–æ–≥–æ –ø—Ä–æ–µ–∑–¥–∞',
    '8. –°–∫–≤–µ—Ä –®–º–∏–¥—Ç–∞',
]

const Form1 = (props: any) => {
    const { handleSubmit, register, errors, control } = useForm({
        defaultValues: props.defaultValues,
        shouldFocusError: false,
    })

    useEffectOnce(() => props.scrollTop())

    const selectedContent = [
        {
            src: '/static/form/0.jpg',
            text: [
                '–í—ã–±—Ä–∞–Ω–Ω–∞—è –¥–ª—è –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ —Ç–æ—á–∫–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∞ –≤—ã—à–µ –ú–µ–º–æ—Ä–∏–∞–ª–∞ –ø–æ–¥ –æ—Ç–∫—Ä—ã—Ç—ã–º –Ω–µ–±–æ–º, –Ω–∞ –ø–ª–æ—â–∞–¥–∫–µ, –∫–æ—Ç–æ—Ä—É—é –º–µ—Å—Ç–Ω—ã–µ –∂–∏—Ç–µ–ª–∏ –Ω–∞–∑—ã–≤–∞—é—Ç "–∫–æ—Ä–æ–Ω–∞".',
                '–ú–µ—Å—Ç–Ω—ã–µ –∂–∏—Ç–µ–ª–∏ —Ä–∞—Å—Å–∫–∞–∑–∞–ª–∏ –Ω–∞–º, —á—Ç–æ –≤—ã–±—Ä–∞–Ω–Ω–∞—è –ø–ª–æ—â–∞–¥–∫–∞ –∏ —Ç–∞–∫ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–ø—É–ª—è—Ä–Ω–∞ —É –º—É—Ä–º–∞–Ω—á–∞–Ω —Å –¥—Ä—É–≥–æ–≥–æ –±–µ—Ä–µ–≥–∞. –ü–æ—ç—Ç–æ–º—É –∂–∏—Ç–µ–ª–∏ –±–æ—è—Ç—Å—è, —á—Ç–æ –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ —Å–¥–µ–ª–∞–µ—Ç –µ–µ –µ—â–µ –±–æ–ª–µ–µ –ø–æ–ø—É–ª—è—Ä–Ω–æ–π –¥–ª—è –Ω–µ –º–µ—Å—Ç–Ω—ã—Ö, –∞ –º–µ—Å—Ç–Ω—ã–µ –ª–∏—à–∞—Ç—å—Å—è —Å–≤–æ–µ–≥–æ —Ç–∏—Ö–æ–≥–æ –ø—Ä–∏—Ä–æ–¥–Ω–æ–≥–æ —É–≥–æ–ª–∫–∞. –í–æ–∑–º–æ–∂–Ω–æ, –≥–ª–∞–≤–Ω–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç—å—é –Ω–æ–≤–æ–π –≤–∏–¥–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –µ–µ –ø—Ä–∏—Ä–æ–¥–∞, –∏–ª–∏ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é –¥–ª—è –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ —Ç–æ—á–∫—É –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏?'
            ],
        },
        {
            text: [
                '–í—ã–±—Ä–∞–Ω–Ω–∞—è –≤–∏–¥–æ–≤–∞—è —Ç–æ—á–∫–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∞ –Ω–∞ –≤–µ—Ä—à–∏–Ω–µ –≥–æ—Ä—ã –ì–æ—Ä–µ–ª–æ–π.',
            ]
        },
        {
            text: [
                '–í—ã–±—Ä–∞–Ω–Ω–∞—è –≤–∏–¥–æ–≤–∞—è –ø–ª–æ—â–∞–¥–∫–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∞ –¥–∞–ª—å—à–µ –¥–æ–º–∞ ‚Ññ19 –Ω–∞ —É–ª–∏—Ü–µ –î–æ—Å—Ç–æ–µ–≤—Å–∫–æ–≥–æ –ø–æ –ø—É—Ç–∏ –Ω–∞ —Å–æ–ø–∫—É.',
            ],
            src: '/static/form/2.jpg',
        },
        {
            text: [
                '–í—ã–±—Ä–∞–Ω–Ω–∞—è –¥–ª—è –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤–∏–¥–æ–≤–∞—è –ø–ª–æ—â–∞–¥–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤—ã—à–µ –¥–æ–º–∞ ‚Ññ54  –Ω–∞ —É–ª–∏—Ü–µ –ö–∞—Ä–ª–∞ –õ–∏–±–∫–Ω–µ—Ö—Ç–∞ –ø–æ –ø—É—Ç–∏ –Ω–∞ —Å–æ–ø–∫—É.',
                '–í–æ –≤—Ä–µ–º—è –ø–æ–ª–µ–≤–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –º—ã —É–∑–Ω–∞–ª–∏ –æ—Ç –º–µ—Å—Ç–Ω—ã—Ö –∂–∏—Ç–µ–ª–µ–π, —á—Ç–æ —Ä—è–¥–æ–º —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–ª–æ—â–∞–¥–∫–æ–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–≤–∞–ª–∫–∞. –í–æ–∑–º–æ–∂–Ω–æ, –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ —Ä–µ—à–∏—Ç —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É, –∏–ª–∏ –í—ã –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç–µ –¥—Ä—É–≥—É—é —Ç–æ—á–∫—É –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏?'
            ],
            src: '/static/form/3.jpg',
        },
        {
            text: [
                '–í—ã–±—Ä–∞–Ω–Ω–∞—è –¥–ª—è –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤–∏–¥–æ–≤–∞—è –ø–ª–æ—â–∞–¥–∫–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∞ –Ω–∞–¥ –¥–µ—Ç—Å–∫–æ–π –ø–ª–æ—â–∞–¥–∫–æ–π —Ä—è–¥–æ–º —Å –¥–æ–º–∞–º–∏ ‚Ññ 11, 13, 15 –ø–æ —É–ª–∏—Ü–µ –ö–∏–ª—å–¥–∏–Ω—Å–∫–æ–π.',
            ],
            src: '/static/form/4.jpg',
        },
        {
            text: [
                '–í—ã–±—Ä–∞–Ω–Ω–∞—è –¥–ª—è –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤–∏–¥–æ–≤–∞—è –ø–ª–æ—â–∞–¥–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø—Ä–∞–≤–µ–µ –±–∞–∑—ã –æ—Ç–¥—ã—Ö–∞ "–ß—É–Ω–≥–∞-–ß–∞–Ω–≥–∞" –≤–¥–æ–ª—å –≤—ã—Å–æ–∫–æ–≥–æ —Å–∫–ª–æ–Ω–∞ —Å –≤–∏–¥–æ–º –Ω–∞ –∑–∞–ª–∏–≤ —Å–ª–µ–≤–∞ —á–µ—Ä–µ–∑ –¥–æ—Ä–æ–≥—É –æ—Ç –¥–æ–º–æ–≤ ‚Ññ21, 23, 25 –ø–æ —É–ª–∏—Ü–µ –ú–∞—è–∫–æ–≤—Å–∫–æ–≥–æ.',
            ],
            src: '/static/form/5.jpg',
        },
        {
            text: [
                '–í—ã–±—Ä–∞–Ω–Ω–∞—è –≤–∏–¥–æ–≤–∞—è –ø–ª–æ—â–∞–¥–∫–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∞ –∑–∞ –¥–æ–º–æ–º ‚Ññ25 –ø–æ —É–ª–∏—Ü–µ –°–µ–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–µ–∑–¥. ',
                '–í–æ –≤—Ä–µ–º—è –ø–æ–ª–µ–≤–æ–π —Ä–∞–±–æ—Ç—ã –º—ã —É–∑–Ω–∞–ª–∏ –æ—Ç –º–µ—Å—Ç–Ω—ã—Ö –∂–∏—Ç–µ–ª–µ–π, —á—Ç–æ –≤—ã–±—Ä–∞–Ω–Ω–∞—è —Ç–æ—á–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≥–æ—Ä–æ–∂–∞–Ω–∞–º–∏ –∫–∞–∫ –ø–∞—Ä–∫–æ–≤–∫–∞, –ø—Ä–∏ —ç—Ç–æ–º –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏ –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∏–¥–æ–≤—ã—Ö —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π, –∫–æ—Ç–æ—Ä—ã–µ, –ø–æ –∏—Ö –º–Ω–µ–Ω–∏—é, –æ—á–µ–Ω—å –Ω—É–∂–¥–∞—é—Ç—Å—è –≤ —Ç–∞–∫–æ–º –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ. –ï—Å–ª–∏ –≤—ã –∑–Ω–∞–µ—Ç–µ –±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ç–æ—á–∫–∏ –¥–ª—è –Ω–æ–≤–æ–π –≤–∏–¥–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–∏ –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏, –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É–π—Ç–µ –∏—Ö! '
            ],
            src: '/static/form/6.jpg',
        },
        {
            text: [
                '–í—ã–±—Ä–∞–Ω–Ω—ã–π –¥–ª—è –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤–∏–¥–æ–≤–æ–π —Å–∫–≤–µ—Ä —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –≤–¥–æ–ª—å –∂–µ–ª–µ–∑–Ω–æ–π –¥–æ—Ä–æ–≥–∏ –¥–æ –∂/–¥ –º–æ—Å—Ç–∞ –Ω–∞–ø—Ä–æ—Ç–∏–≤ –¥–æ–º–æ–≤ ‚Ññ 35, 37, 39, 47 –ø–æ —É–ª–∏—Ü–µ –®–º–∏–¥—Ç–∞. ',
            ],
            src: '/static/form/7.jpg',
        },
    ]

    const selected = useWatch({
        name: 'sectionOne',
        defaultValue: null,
        control,
    })

    return (
        <Form onSubmit={handleSubmit(props.onSubmit)}>
            <div className={s.questionList}>
                <div style={{
                    display: 'flex',
                    justifyContent: 'center',
                    width: '100%',
                    maxHeight: '150vh',
                    paddingBottom: '2rem',
                }}>
                    <Image
                        src='/static/form/map.png'
                        width={1341}
                        height={2418}
                        objectFit='contain'
                    />
                </div>
                <Question
                    head='–í—ã–±–µ—Ä–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–¥–Ω—É –≤–∏–¥–æ–≤—É—é —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é, –º–Ω–µ–Ω–∏–µ–º –æ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è.'
                    required
                >
                    <Radios
                        register={register}
                        errors={errors}
                        name='sectionOne'
                        data={pointNames}
                    />
                </Question>

                {!selected ? null : (
                    <>
                        {selectedContent[pointNames.indexOf(selected)].text.map(x => (
                            <span key={x} style={{
                                paddingBottom: '2rem',
                            }}>
                                {x}
                            </span>
                        ))}
                        {selectedContent[pointNames.indexOf(selected)].src && (
                            <div style={{
                                width: '100%',
                                height: '400px',
                                position: 'relative',
                            }}>
                                <Image
                                    src={selectedContent[pointNames.indexOf(selected)].src}
                                    layout='fill'
                                    objectFit='contain'
                                />
                            </div>
                        )}
                    </>
                )}

                {Object.keys(errors).length > 0 && (
                    <p className={cx(s.caption, s.error)} style={{ alignSelf: 'center', }}>
                        –ü–æ—Ö–æ–∂–µ –≤—ã —á—Ç–æ-—Ç–æ –Ω–µ –∑–∞–ø–æ–ª–Ω–∏–ª–∏
                    </p>
                )}
                <Button
                    theme='default'
                    size={'big'}
                    type={'submit'}
                    style={{
                        alignSelf: 'center',
                        margin: '2rem 0',
                    }}
                >
                    {'–î–ê–õ–ï–ï '} <Emoji name='üëâ' style={{ width: '1.5em', margin: '0 0 .25em .5em' }} />
                </Button>
            </div>
        </Form >
    )
}

const Form2 = (props: any) => {
    const { handleSubmit, register, errors } = useForm({
        defaultValues: props.defaultValues,
        shouldFocusError: false,
    })
    useEffectOnce(() => props.scrollTop())

    const selectedPoint = pointNames.indexOf(props.defaultValues.sectionOne)

    return (
        <Form onSubmit={handleSubmit(props.onSubmit)}>
            <div className={s.questionList}>
                <Question
                    head='–í—ã —Å–æ–≥–ª–∞—Å–Ω—ã, —á—Ç–æ —ç—Ç–∞ —Ç–æ—á–∫–∞ —Å–∞–º–∞—è –ø–æ–¥—Ö–æ–¥—è—â–∞—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–∏ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏?'
                >
                    <Radios
                        register={register}
                        errors={errors}
                        name='sectionTwo_one'
                        data={['–î–∞', '–ù–µ—Ç']}
                    />
                </Question>
                <Question
                    head='–ï—Å–ª–∏ –≤—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ "–Ω–µ—Ç" –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º –≤–æ–ø—Ä–æ—Å–µ –∏ –∑–Ω–∞–µ—Ç–µ –±–æ–ª–µ–µ —Ö–æ—Ä–æ—à—É—é —Ç–æ—á–∫—É –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏, —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –Ω–∞–º, –≥–¥–µ –æ–Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è! –ü–æ—Å–ª–µ —á–µ–≥–æ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏—Å—Ö–æ–¥—è –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–π –≤–∞–º–∏ —Ç–æ—á–∫–∏.'
                    required={false}
                >
                    <Input
                        ref={register}
                        name='sectionTwo_two'
                    />
                </Question>
                <Question
                    head='–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?'
                    required
                >
                    <Radios
                        register={register}
                        errors={errors}
                        name='sectionTwo_three'
                        data={[
                            '13 –ª–µ—Ç –∏ –º–ª–∞–¥—à–µ',
                            '14-17 –ª–µ—Ç',
                            '18-24 –≥–æ–¥–∞',
                            '25-34 –≥–æ–¥–∞',
                            '35-44 –≥–æ–¥–∞',
                            '45-54 –≥–æ–¥–∞',
                            '55-64 –≥–æ–¥–∞',
                            '65 –ª–µ—Ç –∏ —Å—Ç–∞—Ä—à–µ',
                        ]}
                    />
                </Question>
                <Question
                    head='–ß–µ–º –≤—ã –æ–±—ã—á–Ω–æ –∑–∞–Ω–∏–º–∞–µ—Ç–µ—Å—å –Ω–∞ –æ–±–æ–∑–Ω–∞—á–µ–Ω–Ω–æ–π —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏? (–ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤)'
                >
                    <Radios
                        register={register}
                        errors={errors}
                        name='sectionTwo_four'
                        checkbox
                        userAnwser
                        data={[
                            '–ñ–∏–≤—É —Ä—è–¥–æ–º',
                            '–†–∞–±–æ—Ç–∞—é —Ä—è–¥–æ–º',
                            '–•–æ–∂—É –Ω–∞ –ø—Ä–æ–≥—É–ª–∫—É',
                            '–ì—É–ª—è—é —Å —Å–æ–±–∞–∫–æ–π',
                            '–ì—É–ª—è—é —Å –¥–µ—Ç—å–º–∏',
                            '–ó–∞–Ω–∏–º–∞—é—Å—å —Å–ø–æ—Ä—Ç–æ–º',
                            '–õ—é–±—É—é—Å—å –≤–∏–¥–æ–º –Ω–∞ –∑–∞–ª–∏–≤',
                            '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É—é—Å—å',

                            [1].includes(selectedPoint) && '–°–æ–±–∏—Ä–∞—é –≥—Ä–∏–±—ã/—è–≥–æ–¥—ã',
                            [2, 3, 4, 5, 7].includes(selectedPoint) && '–†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ—Ö–æ–∂—É –º–∏–º–æ',
                            [2, 3, 4, 7].includes(selectedPoint) && '–ü–∞—Ä–∫—É—é –º–∞—à–∏–Ω—É',
                            [0, 2, 3, 4, 5, 6, 7].includes(selectedPoint) && '–î–µ–ª–∞—é —à–∞—à–ª—ã–∫–∏',
                            [5].includes(selectedPoint) && '–ü–æ—Å–µ—â–∞—é –±–∞–∑—É –æ—Ç–¥—ã—Ö–∞ "–ß—É–Ω–≥–∞-–ß–∞–Ω–≥–∞"',
                        ]}
                    />
                </Question>
                <Question
                    head='–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, 3-5 —Å–ª–æ–≤ (–ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã—Ö, —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–ª–∏ –≥–ª–∞–≥–æ–ª–æ–≤), –∫–æ—Ç–æ—Ä—ã–µ  –∞—Å—Å–æ—Ü–∏–∏—Ä—É—é—Ç—Å—è —É –≤–∞—Å —Å —ç—Ç–æ–π —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–µ–π?'
                    required={false}
                >
                    <Input
                        ref={register}
                        name='sectionTwo_five'
                    />
                </Question>
                <Question
                    head='–ö–æ–≥–æ —á–∞—â–µ –≤—Å–µ–≥–æ –º–æ–∂–Ω–æ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å –Ω–∞ –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–π —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏? (–ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤)'
                    required
                >
                    <Radios
                        register={register}
                        errors={errors}
                        name='sectionTwo_six'
                        checkbox
                        userAnwser
                        data={[
                            '–®–∫–æ–ª—å–Ω–∏–∫–∏ –º–ª–∞–¥—à–µ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞',
                            '–ü–æ–¥—Ä–æ—Å—Ç–∫–∏',
                            '–ú–æ–ª–æ–¥–µ–∂—å',
                            '–†–æ–¥–∏—Ç–µ–ª–∏ —Å –¥–µ—Ç—å–º–∏',
                            '–õ—é–¥–∏ —Å—Ä–µ–¥–Ω–µ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞',
                            '–ü–æ–∂–∏–ª—ã–µ –ª—é–¥–∏',
                            '–°–æ–±–∞—á–Ω–∏–∫–∏',
                            '–°–ø–æ—Ä—Ç—Å–º–µ–Ω—ã',
                            '–ñ–∏—Ç–µ–ª–∏ –¥—Ä—É–≥–∏—Ö —Ä–∞–π–æ–Ω–æ–≤ –≥–æ—Ä–æ–¥–∞',
                            '–¢—É—Ä–∏—Å—Ç—ã',
                            [5].includes(selectedPoint) && '–ü–æ—Å–µ—Ç–∏—Ç–µ–ª–∏ –±–∞–∑—ã –æ—Ç–¥—ã—Ö–∞ "–ß—É–Ω–≥–∞-–ß–∞–Ω–≥–∞"',
                        ]}
                    />
                </Question>
                <Question
                    head='–ß—Ç–æ –¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –¥–µ–ª–∞—é—Ç —Ç–∞–º –≤ —Ä–∞–∑–Ω–æ–µ –≤—Ä–µ–º—è –≥–æ–¥–∞? (–ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤)'
                    required
                >
                    <Radios
                        register={register}
                        errors={errors}
                        name='sectionTwo_seven'
                        checkbox
                        userAnwser
                        data={[
                            '–•–æ–¥—è—Ç –Ω–∞ –ø—Ä–æ–≥—É–ª–∫—É',
                            '–ì—É–ª—è—é—Ç —Å —Å–æ–±–∞–∫–∞–º–∏',
                            '–ë–µ–≥–∞—é—Ç',
                            '–ó–∞–Ω–∏–º–∞—é—Ç—Å—è —Å–∫–∞–Ω–¥–∏–Ω–∞–≤—Å–∫–æ–π —Ö–æ–¥—å–±–æ–π',
                            '–°–æ–±–∏—Ä–∞—é—Ç –≥—Ä–∏–±—ã/—è–≥–æ–¥—ã',
                            '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É—é—Ç—Å—è',
                            '–°–º–æ—Ç—Ä—è—Ç –Ω–∞ —Ñ–µ–π–µ—Ä–≤–µ—Ä–∫–∏',

                            [0, 2, 3, 4, 5, 6, 7].includes(selectedPoint) && '–ì—É–ª—è—é—Ç —Å –¥–µ—Ç—å–º–∏',
                            [0, 2, 3, 4, 5, 6, 7].includes(selectedPoint) && '–ö–∞—Ç–∞—é—Ç—Å—è –Ω–∞ –ª—ã–∂–∞—Ö',
                            [0, 2, 3, 4, 5, 6, 7].includes(selectedPoint) && '–î–µ–ª–∞—é—Ç —à–∞—à–ª—ã–∫–∏',
                            [0, 2, 3, 4, 5, 6, 7].includes(selectedPoint) && '–í—ã–ø–∏–≤–∞—é—Ç',
                            [1, 2, 3, 4, 5, 6, 7].includes(selectedPoint) && '–õ—é–±—É—é—Ç—Å—è –∑–∞–ª–∏–≤–æ–º',
                            [2, 3, 4, 5, 6, 7].includes(selectedPoint) && '–ü–∞—Ä–∫—É—é—Ç –º–∞—à–∏–Ω—É',
                        ]}
                    />
                </Question>
                <Question
                    head='–ö–∞–∫—É—é —Å—Ñ–µ—Ä—É –≤–∞–º –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å –≤–∏–¥–µ—Ç—å –Ω–∞–∏–±–æ–ª–µ–µ —Ä–∞–∑–≤–∏—Ç–æ–π –∑–¥–µ—Å—å?'
                    required
                    caption='–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, —á—Ç–æ –±—é–¥–∂–µ—Ç –ø—Ä–æ–µ–∫—Ç–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω (–∏ —ç—Ç–æ, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —Ñ–∞–Ω—Ç–∞–∑–∏—è, –∞ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å), –ø–æ—ç—Ç–æ–º—É –ø–æ–º–∏–º–æ –≤–∏–¥–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥—É—â–∞—è –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –ø–ª–æ—â–∞–¥–∫–∞ –º–æ–∂–µ—Ç –æ–±–ª–∞–¥–∞—Ç—å –ª–∏—à—å –µ—â—ë –æ–¥–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–æ–π. –ö–∞–∫–∞—è —ç—Ç–æ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞? –í–∞–∂–Ω–æ: –≤—ã–±–∏—Ä–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É, –≤—ã –Ω–µ —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –≤ —Å–∫–æ–±–∫–∞—Ö! –í —Å–ª–µ–¥—É—é—â–µ–º –≤–æ–ø—Ä–æ—Å–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –≤–∏–¥–µ—Ç—å –Ω–∞ –ø–ª–æ—â–∞–¥–∫–µ.'
                >
                    <Radios
                        register={register}
                        errors={errors}
                        name='sectionTwo_eight'
                        data={[
                            '–ü—Ä–∏—Ä–æ–¥–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è (–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –ø—Ä–∏—Ä–æ–¥–æ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–æ–∑–¥–∞–Ω–∏–µ —ç–∫–æ—Ç—Ä–æ–ø—ã, —Å–∞–¥–∞, –æ—Ä–∞–Ω–∂–µ—Ä–µ–∏ –∏ —Ç.–¥.)',
                            '–†–µ–∫—Ä–µ–∞—Ü–∏–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è (–ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ —Å–µ–º–µ–π–Ω—ã—Ö –∏ –¥—Ä—É–∂–µ—Å–∫–∏—Ö –±–∞—Ä–±–µ–∫—é, –ø–∏–∫–Ω–∏–∫–æ–≤ –∏ —Ç.–¥.)',
                            '–°–ø–æ–∫–æ–π–Ω—ã–π –æ—Ç–¥—ã—Ö (—Ç–∏—Ö–∏–π –¥–æ—Å—É–≥, –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—é—â–∏–π —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–∫–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –∫–∞–∫ —Å–∫–∞–º–µ–π–∫–∏-–∫–∞—á–µ–ª–∏ –¥–ª—è –≤—Å–µ—Ö –≤–æ–∑—Ä–∞—Å—Ç–æ–≤, –±—É–∫–∫—Ä–æ—Å—Å–∏–Ω–≥, –±–µ—Å–µ–¥–∫–∏ –∏ —Ç.–¥.)',
                            '–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏ –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö (–æ–±—ä–µ–∫—Ç—ã –¥–ª—è —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–≥–æ –¥–æ—Å—É–≥–∞, —Ç–∞–∫–∏–µ –∫–∞–∫ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –ø–ª–æ—â–∞–¥–∫–∏, —É–ª–∏—á–Ω—ã–µ —Ç—Ä–µ–Ω–∞–∂–µ—Ä—ã, –∫–∞—Ç–æ–∫, –ª—ã–∂–Ω—è –∏ —Ç.–¥.)',
                            '–î–µ—Ç—Å–∫–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ (–æ–±—ä–µ–∫—Ç—ã –¥–ª—è –¥–µ—Ç—Å–∫–æ–≥–æ –¥–æ—Å—É–≥–∞, —Ç–∞–∫–∏–µ –∫–∞–∫ –∏–≥—Ä–æ–≤—ã–µ –ø–ª–æ—â–∞–¥–∫–∏, –≥–æ—Ä–∫–∏ –∏ —Ç.–¥.)',
                            '–ü–æ–¥—Ä–æ—Å—Ç–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ (–æ–±—ä–µ–∫—Ç—ã –¥–ª—è –¥–æ—Å—É–≥–∞ –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤, —Ç–∞–∫–∏–µ –∫–∞–∫ –º–µ—Å—Ç–∞ –¥–ª—è –¥—Ä—É–∂–µ—Å–∫–æ–≥–æ –æ–±—â–µ–Ω–∏—è —Å Wi-Fi, —Ñ–æ—Ç–æ–∑–æ–Ω–∞, —Å–∫–µ–π—Ç –ø—É–ª –∏ —Ç.–¥.)',
                            '–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –¥–æ–º–∞—à–Ω–∏—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö (–ø—Ä–æ–≥—É–ª–æ—á–Ω—ã–µ –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–µ –ø–ª–æ—â–∞–¥–æ–∫ –¥–ª—è –¥–æ–º–∞—à–Ω–∏—Ö –ø–∏—Ç–æ–º—Ü–µ–≤ –∏ –∏—Ö —Ö–æ–∑—è–µ–≤)',
                            '–ö—É–ª—å—Ç—É—Ä–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è (–ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –¥–ª—è –≥–æ—Ä–æ–∂–∞–Ω –∏ —Ç—É—Ä–∏—Å—Ç–æ–≤ –∞—Ä—Ç-–æ–±—ä–µ–∫—Ç—ã, –º–µ—Å—Ç–æ –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è –Ω–∞ –ø–ª–µ–Ω—ç—Ä–µ –∏ —Ç.–¥.)',
                            '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è (–∫–∞—Ñ–µ, –∫–æ—Ñ–µ —Å —Å–æ–±–æ–π –∏ —Ç.–¥.)',
                        ]}
                    />
                </Question>

                {Object.keys(errors).length > 0 && (
                    <p className={cx(s.caption, s.error)} style={{ alignSelf: 'center', }}>
                        –ü–æ—Ö–æ–∂–µ –≤—ã —á—Ç–æ-—Ç–æ –Ω–µ –∑–∞–ø–æ–ª–Ω–∏–ª–∏
                    </p>
                )}
                <Button
                    theme='default'
                    size={'big'}
                    type={'submit'}
                    style={{
                        alignSelf: 'center'
                    }}
                >
                    {'–î–ê–õ–ï–ï '} <Emoji name='üëâ' style={{ width: '1.5em', margin: '0 0 .25em .5em' }} />
                </Button>
                <div style={{ height: '1rem' }} />
            </div>
        </Form >
    )
}

const Form3 = (props: any) => {
    const { handleSubmit, register, errors } = useForm({
        defaultValues: props.defaultValues,
        shouldFocusError: false,
    })

    useEffectOnce(() => props.scrollTop())


    const eightAnwsers = [
        '–ü—Ä–∏—Ä–æ–¥–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è (–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –ø—Ä–∏—Ä–æ–¥–æ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–æ–∑–¥–∞–Ω–∏–µ —ç–∫–æ—Ç—Ä–æ–ø—ã, —Å–∞–¥–∞, –æ—Ä–∞–Ω–∂–µ—Ä–µ–∏ –∏ —Ç.–¥.)',
        '–†–µ–∫—Ä–µ–∞—Ü–∏–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è (–ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ —Å–µ–º–µ–π–Ω—ã—Ö –∏ –¥—Ä—É–∂–µ—Å–∫–∏—Ö –±–∞—Ä–±–µ–∫—é, –ø–∏–∫–Ω–∏–∫–æ–≤ –∏ —Ç.–¥.)',
        '–°–ø–æ–∫–æ–π–Ω—ã–π –æ—Ç–¥—ã—Ö (—Ç–∏—Ö–∏–π –¥–æ—Å—É–≥, –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—é—â–∏–π —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–∫–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –∫–∞–∫ —Å–∫–∞–º–µ–π–∫–∏-–∫–∞—á–µ–ª–∏ –¥–ª—è –≤—Å–µ—Ö –≤–æ–∑—Ä–∞—Å—Ç–æ–≤, –±—É–∫–∫—Ä–æ—Å—Å–∏–Ω–≥, –±–µ—Å–µ–¥–∫–∏ –∏ —Ç.–¥.)',
        '–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏ –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö (–æ–±—ä–µ–∫—Ç—ã –¥–ª—è —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–≥–æ –¥–æ—Å—É–≥–∞, —Ç–∞–∫–∏–µ –∫–∞–∫ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –ø–ª–æ—â–∞–¥–∫–∏, —É–ª–∏—á–Ω—ã–µ —Ç—Ä–µ–Ω–∞–∂–µ—Ä—ã, –∫–∞—Ç–æ–∫, –ª—ã–∂–Ω—è –∏ —Ç.–¥.)',
        '–î–µ—Ç—Å–∫–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ (–æ–±—ä–µ–∫—Ç—ã –¥–ª—è –¥–µ—Ç—Å–∫–æ–≥–æ –¥–æ—Å—É–≥–∞, —Ç–∞–∫–∏–µ –∫–∞–∫ –∏–≥—Ä–æ–≤—ã–µ –ø–ª–æ—â–∞–¥–∫–∏, –≥–æ—Ä–∫–∏ –∏ —Ç.–¥.)',
        '–ü–æ–¥—Ä–æ—Å—Ç–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ (–æ–±—ä–µ–∫—Ç—ã –¥–ª—è –¥–æ—Å—É–≥–∞ –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤, —Ç–∞–∫–∏–µ –∫–∞–∫ –º–µ—Å—Ç–∞ –¥–ª—è –¥—Ä—É–∂–µ—Å–∫–æ–≥–æ –æ–±—â–µ–Ω–∏—è —Å Wi-Fi, —Ñ–æ—Ç–æ–∑–æ–Ω–∞, —Å–∫–µ–π—Ç –ø—É–ª –∏ —Ç.–¥.)',
        '–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –¥–æ–º–∞—à–Ω–∏—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö (–ø—Ä–æ–≥—É–ª–æ—á–Ω—ã–µ –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–µ –ø–ª–æ—â–∞–¥–æ–∫ –¥–ª—è –¥–æ–º–∞—à–Ω–∏—Ö –ø–∏—Ç–æ–º—Ü–µ–≤ –∏ –∏—Ö —Ö–æ–∑—è–µ–≤)',
        '–ö—É–ª—å—Ç—É—Ä–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è (–ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –¥–ª—è –≥–æ—Ä–æ–∂–∞–Ω –∏ —Ç—É—Ä–∏—Å—Ç–æ–≤ –∞—Ä—Ç-–æ–±—ä–µ–∫—Ç—ã, –º–µ—Å—Ç–æ –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è –Ω–∞ –ø–ª–µ–Ω—ç—Ä–µ –∏ —Ç.–¥.)',
        '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è (–∫–∞—Ñ–µ, –∫–æ—Ñ–µ —Å —Å–æ–±–æ–π –∏ —Ç.–¥.)',
    ]
    const selectedEight = eightAnwsers.indexOf(props.defaultValues.sectionTwo_eight)
    const sectionThree_one = [
        {
            head: '–ö–∞–∫–∏–µ –æ–±—ä–µ–∫—Ç—ã, –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—é—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø—Ä–∏—Ä–æ–¥–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π, –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∏–¥–µ—Ç—å –Ω–∞ –±—É–¥—É—â–µ–π –≤–∏–¥–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–µ? (–Ω–µ –±–æ–ª–µ–µ 3-—Ö –æ—Ç–≤–µ—Ç–æ–≤)',
            data: [
                '–≠–∫–æ—Ç—Ä–æ–ø–∞',
                '–ü—Ä–æ–≥—É–ª–æ—á–Ω–∞—è –∑–æ–Ω–∞',
                '–ì–æ—Ä–æ–¥—Å–∫–æ–π –æ–≥–æ—Ä–æ–¥',
                '–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–µ –ª–∞–Ω–¥—à–∞—Ñ—Ç–Ω–æ–µ –æ–∑–µ–ª–µ–Ω–µ–Ω–∏–µ',
                '–¢–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏–π —Å–∞–¥',
                '–ö–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–∞—è –∫–ª—É–º–±–∞',
                '–ó–∏–º–Ω—è—è –æ—Ä–∞–Ω–∂–µ—Ä–µ—è',
                '–°–∞–¥ –∫–∞–º–Ω–µ–π',
                '–¢–∞–∫—Ç–∏–ª—å–Ω—ã–π —Å–∞–¥',
                '–í–æ–¥–Ω—ã–π –æ–±—ä–µ–∫—Ç',
                '–£–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ ¬´–∑–µ–ª–µ–Ω—ã–µ¬ª –∫—É–ª—É–∞—Ä—ã'
            ]
        },
        {
            head: '–ö–∞–∫–∏–µ –æ–±—ä–µ–∫—Ç—ã, –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—é—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —Ä–µ–∫—Ä–µ–∞—Ü–∏–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π, –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∏–¥–µ—Ç—å –Ω–∞ –±—É–¥—É—â–µ–π –≤–∏–¥–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–µ? (–Ω–µ –±–æ–ª–µ–µ 2-—Ö –æ—Ç–≤–µ—Ç–æ–≤)',
            data: [
                '–ó–æ–Ω–∞ –¥–ª—è –ª–µ—Ç–Ω–µ–≥–æ –±–∞—Ä–±–µ–∫—é',
                '–ó–æ–Ω–∞ –¥–ª—è –∑–∏–º–Ω–µ–≥–æ –±–∞—Ä–±–µ–∫—é',
                '–ú–µ—Å—Ç–æ –¥–ª—è –ø–∏–∫–Ω–∏–∫–æ–≤',
                '–ë–µ—Å–µ–¥–∫–∞ —Å –æ–±–æ–≥—Ä–µ–≤–æ–º',
            ]
        },
        {
            head: '–ö–∞–∫–∏–µ –æ–±—ä–µ–∫—Ç—ã, –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—é—â–∏–µ —Å–ø–æ–∫–æ–π–Ω—ã–π –æ—Ç–¥—ã—Ö, –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∏–¥–µ—Ç—å –Ω–∞ –±—É–¥—É—â–µ–π –≤–∏–¥–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–µ? (–Ω–µ –±–æ–ª–µ–µ 3-—Ö –æ—Ç–≤–µ—Ç–æ–≤)',
            data: [
                '–ë–µ—Å–µ–¥–∫–∞ —Å –æ–±–æ–≥—Ä–µ–≤–æ–º',
                '–°–∫–∞–º–µ–π–∫–∏ —Å –æ–±–æ–≥—Ä–µ–≤–æ–º',
                '–ö–∞—á–µ–ª–∏ –¥–ª—è –ª—é–¥–µ–π –≤—Å–µ—Ö –≤–æ–∑—Ä–∞—Å—Ç–æ–≤',
                '–ó–æ–Ω–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è –∏ –æ–±–º–µ–Ω–∞ –∫–Ω–∏–≥–∞–º–∏ (–±—É–∫–∫—Ä–æ—Å–∏–Ω–≥)',
                '–°—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω—ã–π –±–∏–Ω–æ–∫–ª—å –¥–ª—è —Å–º–æ—Ç—Ä–æ–≤—ã—Ö –ø–ª–æ—â–∞–¥–æ–∫',
                '–ë–∞—à–Ω—è –¥–ª—è –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∑–∞ –Ω–µ–±–µ—Å–Ω—ã–º–∏ —è–≤–ª–µ–Ω–∏—è–º–∏',
            ]
        },
        {
            head: '–ö–∞–∫–∏–µ –æ–±—ä–µ–∫—Ç—ã, –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—é—â–∏–µ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏ –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö, –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∏–¥–µ—Ç—å –Ω–∞ –±—É–¥—É—â–µ–π –≤–∏–¥–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–µ? (–Ω–µ –±–æ–ª–µ–µ 3-—Ö –æ—Ç–≤–µ—Ç–æ–≤)',
            data: [
                '–£–ª–∏—á–Ω—ã–µ —Ç—Ä–µ–Ω–∞–∂–µ—Ä—ã',
                '–ü–ª–æ—â–∞–¥–∫–∞ –¥–ª—è –≤–æ—Ä–∫-–∞—É—Ç–∞',
                '–ò–Ω–∫–ª—é–∑–∏–≤–Ω–∞—è —Å–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –ø–ª–æ—â–∞–¥–∫–∞ (–¥–ª—è –ª—é–¥–µ–π —Å –û–í–ó)',
                '–ü–ª–æ—â–∞–¥–∫–∞ –¥–ª—è –∏–≥—Ä—ã –≤ —Å—Ç—Ä–∏—Ç–±–æ–ª',
                '–õ—ã–∂–Ω—è',
                '–°—Ç–æ–ª –¥–ª—è –∏–≥—Ä—ã –≤ –Ω–∞—Å—Ç–æ–ª—å–Ω—ã–π —Ç–µ–Ω–Ω–∏—Å',
                '–ó–∏–º–Ω–∏–π –∫–∞—Ç–æ–∫',
                '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∑–∏–º–Ω–∏–µ –≥–æ—Ä–∫–∏',
            ]
        },
        {
            head: '–ö–∞–∫–∏–µ –æ–±—ä–µ–∫—Ç—ã, –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—é—â–∏–µ –¥–µ—Ç—Å–∫–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏, –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∏–¥–µ—Ç—å –Ω–∞ –±—É–¥—É—â–µ–π –≤–∏–¥–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–µ? (–Ω–µ –±–æ–ª–µ–µ 2-—Ö –æ—Ç–≤–µ—Ç–æ–≤)',
            data: [
                '–ò–≥—Ä–æ–≤–∞—è –ø–ª–æ—â–∞–¥–∫–∞ –¥–ª—è –º–∞–ª—ã—à–µ–π –¥–æ 3-—Ö –ª–µ—Ç',
                '–ò–≥—Ä–æ–≤–∞—è –ø–ª–æ—â–∞–¥–∫–∞ –¥–ª—è –¥–æ—à–∫–æ–ª—å–Ω–∏–∫–æ–≤ 3-6 –ª–µ—Ç',
                '–ò–≥—Ä–æ–≤–∞—è –ø–ª–æ—â–∞–¥–∫–∞ –¥–ª—è –º–ª–∞–¥—à–∏—Ö —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ 7-11 –ª–µ—Ç',
                '–°–Ω–µ–∂–Ω—ã–µ –∏–ª–∏ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–µ –ª–∞–±–∏—Ä–∏–Ω—Ç—ã/–ø–æ–ª–æ—Å–∞ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π',
                '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –≤—Å–µ—Å–µ–∑–æ–Ω–Ω—ã–µ –≥–æ—Ä–∫–∏',
                '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∑–∏–º–Ω–∏–µ –≥–æ—Ä–∫–∏',
            ]
        },
        {
            head: '–ö–∞–∫–∏–µ –æ–±—ä–µ–∫—Ç—ã, –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—é—â–∏–µ –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏, –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∏–¥–µ—Ç—å –Ω–∞ –±—É–¥—É—â–µ–π –≤–∏–¥–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–µ? (–Ω–µ –±–æ–ª–µ–µ 3-—Ö –æ—Ç–≤–µ—Ç–æ–≤)',
            data: [
                '–ú–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç—Ä–µ—á —Å –¥—Ä—É–∑—å—è–º–∏ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Wi-Fi –∏ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤—É',
                '–°–∫–µ–π—Ç –ø—É–ª',
                '–†–æ–ª–ª–µ–¥—Ä–æ–º',
                '–§–æ—Ç–æ–∑–æ–Ω–∞ —Å –≤–∏–¥–æ–º –Ω–∞ –∑–∞–ª–∏–≤',
                '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –≤—Å–µ—Å–µ–∑–æ–Ω–Ω—ã–µ –≥–æ—Ä–∫–∏',
                '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∑–∏–º–Ω–∏–µ –≥–æ—Ä–∫–∏',
            ]
        },
        {
            head: '–ö–∞–∫–∏–µ –æ–±—ä–µ–∫—Ç—ã, –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—é—â–∏–µ  –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –¥–æ–º–∞—à–Ω–∏—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö, –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∏–¥–µ—Ç—å –Ω–∞ –±—É–¥—É—â–µ–π –≤–∏–¥–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–µ? (–Ω–µ –±–æ–ª–µ–µ 3-—Ö –æ—Ç–≤–µ—Ç–æ–≤)',
            data: [
                '–ú–µ—Å—Ç–æ –¥–ª—è –≤—ã–≥—É–ª–∞ –±–æ–ª—å—à–∏—Ö —Å–æ–±–∞–∫',
                '–ú–µ—Å—Ç–æ –¥–ª—è –≤—ã–≥—É–ª–∞ –º–∞–ª–µ–Ω—å–∫–∏—Ö —Å–æ–±–∞–∫',
                '–ü–ª–æ—â–∞–¥–∫–∞ –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ —Å–æ–±–∞–∫',
                '–ë–µ—Å–µ–¥–∫–∞ —Å –æ–±–æ–≥—Ä–µ–≤–æ–º –¥–ª—è —Ö–æ–∑—è–µ–≤',
            ]
        },
        {
            head: '–ö–∞–∫–∏–µ –æ–±—ä–µ–∫—Ç—ã, –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—é—â–∏–µ  –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∫—É–ª—å—Ç—É—Ä–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π, –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∏–¥–µ—Ç—å –Ω–∞ –±—É–¥—É—â–µ–π –≤–∏–¥–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–µ? (–Ω–µ –±–æ–ª–µ–µ 3-—Ö –æ—Ç–≤–µ—Ç–æ–≤)',
            data: [
                '–ê—Ä—Ç-–æ–±—ä–µ–∫—Ç—ã, –æ—Ç—Ä–∞–∂–∞—é—â–∏–µ –∏—Å—Ç–æ—Ä–∏—é –º–µ—Å—Ç–∞',
                '–ê—Ä—Ç-–æ–±—ä–µ–∫—Ç—ã, –æ—Ç—Ä–∞–∂–∞—é—â–∏–µ –º–æ—Ä—Å–∫—É—é –∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å –≥–æ—Ä–æ–¥–∞',
                '–õ—ç–Ω–¥-–∞—Ä—Ç (–ª–∞–Ω–¥—à–∞—Ñ—Ç–Ω–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ)',
                '–ú–µ—Å—Ç–æ –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è –ø–µ–π–∑–∞–∂–µ–π',
                '–ú–µ—Å—Ç–æ –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Å–æ—Å–µ–¥—Å–∫–∏—Ö –≤—Å—Ç—Ä–µ—á –∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π',
                '–§–æ—Ç–æ–∑–æ–Ω–∞ —Å –≤–∏–¥–æ–º –Ω–∞ –∑–∞–ª–∏–≤',
            ]
        },
        {
            head: '–ö–∞–∫–∏–µ –æ–±—ä–µ–∫—Ç—ã, –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—é—â–∏–µ  –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π, –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∏–¥–µ—Ç—å –Ω–∞ –±—É–¥—É—â–µ–π –≤–∏–¥–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–µ? (–Ω–µ –±–æ–ª–µ–µ 2-—Ö –æ—Ç–≤–µ—Ç–æ–≤)',
            data: [
                '–ö–æ—Ñ–µ —Å —Å–æ–±–æ–π',
                '–°–µ–º–µ–π–Ω–æ–µ –∫–∞—Ñ–µ',
                '–ü–∞–≤–∏–ª—å–æ–Ω—ã —Å —É–ª–∏—á–Ω–æ–π –µ–¥–æ–π –∏ –≥–æ—Ä—è—á–∏–º–∏ –Ω–∞–ø–∏—Ç–∫–∞–º–∏',
                '–§—É–¥—Ç—Ä–∞–∫–∏',
            ]
        }
    ]

    return (
        <Form onSubmit={handleSubmit(props.onSubmit)}>
            <div className={s.questionList}>
                <Question
                    head={sectionThree_one[selectedEight].head}
                    required
                >
                    <Radios
                        register={register}
                        errors={errors}
                        checkbox
                        userAnwser
                        name='sectionThree_one'
                        data={sectionThree_one[selectedEight].data}
                    />
                </Question>
                <Question
                    head='–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, 3-5 —Å–ª–æ–≤ (–ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã—Ö, —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–ª–∏ –≥–ª–∞–≥–æ–ª–æ–≤), –ø–µ—Ä–µ–¥–∞—é—â–∏—Ö –≤–∞—à–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ —Ç–æ–º, –∫–∞–∫–æ–π –¥–æ–ª–∂–Ω–∞ —Å—Ç–∞—Ç—å –≤–∏–¥–æ–≤–∞—è –ø–ª–æ—â–∞–¥–∫–∞ –ø–æ—Å–ª–µ –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞?'
                    required={false}
                >
                    <Input
                        ref={register}
                        name='sectionThree_two'
                    />
                </Question>

                {Object.keys(errors).length > 0 && (
                    <p className={cx(s.caption, s.error)} style={{ alignSelf: 'center', }}>
                        –ü–æ—Ö–æ–∂–µ –≤—ã —á—Ç–æ-—Ç–æ –Ω–µ –∑–∞–ø–æ–ª–Ω–∏–ª–∏
                    </p>
                )}
                <Button
                    theme={'default'}
                    size={'big'}
                    type={'submit'}
                    style={{
                        alignSelf: 'center'
                    }}
                >
                    {'–î–ê–õ–ï–ï '} <Emoji name='üëâ' style={{ width: '1.5em', margin: '0 0 .25em .5em' }} />
                </Button>
                <div style={{ height: '1rem' }} />
            </div>
        </Form>
    )
}

const Form4 = (props: any) => {
    const { handleSubmit, register, errors, formState } = useForm({
        defaultValues: props.defaultValues,
        shouldFocusError: false,
    })

    useEffectOnce(() => props.scrollTop())

    return (
        <Form onSubmit={handleSubmit(props.onSubmit)}>
            <div className={s.questionList}>
                <Question
                    head='–ß—Ç–æ –¥–ª—è –≤–∞—Å –¥–µ–ª–∞–µ—Ç –ú—É—Ä–º–∞–Ω—Å–∫ –º–æ—Ä—Å–∫–∏–º –≥–æ—Ä–æ–¥–æ–º? (–ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤)'
                    required
                >
                    <Radios
                        register={register}
                        errors={errors}
                        checkbox
                        userAnwser
                        name='sectionFour_one'
                        data={[
                            '–ò—Å—Ç–æ—Ä–∏—è –≥–æ—Ä–æ–¥–∞ –∏ —Ä–∞—Å—Å–∫–∞–∑—ã —Å—Ç–∞—Ä–æ–∂–∏–ª–æ–≤',
                            '–ú–æ—Ä—è–∫–∏',
                            '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ª—é–±–æ–≤–∞—Ç—å—Å—è –∑–∞–∫–∞—Ç–∞–º–∏ –Ω–∞–¥ –∑–∞–ª–∏–≤–æ–º',
                            '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞–±–ª—é–¥–∞—Ç—å –∑–∞ –∫–æ—Ä–∞–±–ª—è–º–∏',
                            '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–¥–æ–π—Ç–∏ –∫ –≤–æ–¥–µ',
                            '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–π—Ç–∏ –≤ –º–æ—Ä–µ',
                            '–ë–ª–∏–∑–æ—Å—Ç—å –ø–æ—Ä—Ç–∞',
                            '–†—ã–±–∞ –∏ –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç—ã',
                            '–ú–æ—Ä—Å–∫–æ–π –≤–µ—Ç–µ—Ä –∏ –≤–æ–∑–¥—É—Ö',
                            '–†—ã–±–∞–ª–∫–∞',
                            '–ö—Ä–∏–∫–∏ —á–∞–µ–∫',
                        ]}
                    />
                </Question>
                <Question
                    head='–ö–∞–∫–æ–π –≤–∞—à –∑–∞–ª–∏–≤? –ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ: –≤ –≤–∏–¥–µ —Ñ–∞–∫—Ç–∞, –ª–∏—á–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏, –ª–∏–±–æ 3-5 —Å–ª–æ–≤, –ø–µ—Ä–µ–¥–∞—é—â–∏—Ö –≤–∞—à–∏ –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏ —Å –ö–æ–ª—å—Å–∫–∏–º –∑–∞–ª–∏–≤–æ–º. '
                    required={false}
                >
                    <TextArea
                        name='sectionFour_two'
                        ref={register}
                    />
                    {errors?.['sectionFour_two'] && (
                        <p className={cx(s.caption, s.error)}>
                            {errors['sectionFour_two'].message}
                        </p>
                    )}
                </Question>
                <Question
                    head='–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤–∞–º –Ω–µ –≤—Å–µ —Ä–∞–≤–Ω–æ, –∫–∞–∫–∏–º —Å—Ç–∞–Ω–µ—Ç –Ω–∞—à –≥–æ—Ä–æ–¥ –∏ –Ω–∞—à –∑–∞–ª–∏–≤! –ï—Å–ª–∏ –≤—ã –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –æ–±—Å—É–∂–¥–µ–Ω–∏—è—Ö –ø–æ –ø—Ä–æ–µ–∫—Ç—É –∏ –≤–ª–∏—è—Ç—å –Ω–∞ —Ç–æ, –∫–∞–∫–∏–º–∏ –±—É–¥—É—Ç –≥–æ—Ä–æ–¥—Å–∫–∏–µ –≤–∏–¥–æ–≤—ã–µ –ø–ª–æ—â–∞–¥–∫–∏, –æ—Å—Ç–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à–∏ –∏–º—è –∏ –ª—é–±—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã (–ø–æ—á—Ç–∞, —Ç–µ–ª–µ—Ñ–æ–Ω, –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä—ã –∏ –¥—Ä.).'
                    required={false}
                >
                    <TextArea
                        name='sectionFour_three'
                        ref={register}
                    />
                    {errors?.['sectionFour_three'] && (
                        <p className={cx(s.caption, s.error)}>
                            {errors['sectionFour_three'].message}
                        </p>
                    )}
                </Question>

                {Object.keys(errors).length > 0 && (
                    <p className={cx(s.caption, s.error)} style={{ alignSelf: 'center', }}>
                        –ü–æ—Ö–æ–∂–µ –≤—ã —á—Ç–æ-—Ç–æ –Ω–µ –∑–∞–ø–æ–ª–Ω–∏–ª–∏
                    </p>
                )}
                <Button
                    theme={'default'}
                    size={'big'}
                    type={'submit'}
                    style={{
                        alignSelf: 'center',
                    }}
                    disabled={formState.isSubmitting}
                    onClick={e => formState.isSubmitting && e.preventDefault()}
                >
                    {props.buttonText}
                </Button>
                <p style={{ alignSelf: 'center' }}>
                    –ù–∞–∂–∏–º–∞—è —ç—Ç—É –∫–Ω–æ–ø–∫—É —è —Å–æ–≥–ª–∞—à–∞—é—Å—å –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
                </p>
            </div>
        </Form>
    )
}

export const OpinionForm: React.FC<any> = ({ showFinish, scrollTop }) => {
    const [state, setState] = useState('–û–¢–ü–†–ê–í–ò–¢–¨')
    const stateStatus = {
        send: '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º‚Ä¶',
        error: '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ¬†—Ç–∞–∫',
        ok: '–ì–æ—Ç–æ–≤–æ!',
    }

    const onSubmit = useCallback(async data => {
        setState(stateStatus.send)

        await fetch('/api', { method: 'POST', body: JSON.stringify(data) })
            .then((res) => {
                if (res.status !== 200) {
                    setState(stateStatus.error)
                    console.log(res)
                }
                return res.json()
            })
            .then(res => {
                res.result === 'error' && console.log(res)
                setState(res.result === 'success' ? showFinish() : stateStatus.error)
            })
    }, [])

    const [formData, setFormData] = useState({})
    const [formState, setFormState] = useState([false, false, false, false])
    const [step, setStep] = useState(0)

    const onSubmitStep = useCallback(value => {
        setFormData({ ...formData, ...value })

        const newState = formState
        newState[step] = true
        setFormState(newState)

        setStep(step + 1)
    }, [formData, step])

    const finalSubmit = useCallback(async value => {
        const data = { ...formData, ...value }
        setFormData(data)

        const newState = formState
        newState[step] = true
        setFormState(newState)

        const invalidStep = formState.findIndex(x => !x)
        if (invalidStep !== -1) {
            setStep(invalidStep)
            return
        }

        await onSubmit(data)

    }, [formData, formState, step])

    const activeFromComponent = () => {
        switch (step) {
            case 0:
                return (
                    <Form1
                        defaultValues={formData}
                        scrollTop={scrollTop}
                        onSubmit={onSubmitStep}
                    />
                )
            case 1:
                return (
                    <Form2
                        defaultValues={formData}
                        scrollTop={scrollTop}
                        onSubmit={onSubmitStep}
                    />
                )
            case 2:
                return (
                    <Form3
                        defaultValues={formData}
                        scrollTop={scrollTop}
                        onSubmit={onSubmitStep}
                    />
                )
            case 3:
                return (
                    <Form4
                        defaultValues={formData}
                        scrollTop={scrollTop}
                        onSubmit={finalSubmit}
                        buttonText={state}
                    />
                )

            default:
                null
                break
        }
    }

    const stepButtons = [
        {
            button: '–í—ã–±–æ—Ä –ø–ª–æ—â–∞–¥–∫–∏',
            description: '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥–æ–≤—É—é –ø–ª–æ—â–∞–¥–∫—É'
        },
        {
            button: '–û –ø–ª–æ—â–∞–¥–∫–µ',
            description: '–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –Ω–∞–º –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–ª–æ—â–∞–¥–∫–µ'
        },
        {
            button: '–°—Ñ–µ—Ä–∞ –ø–ª–æ—â–∞–¥–∫–∏',
            description: ''
        },
        {
            button: '–û –≤–∞—Å',
            description: '–ù–∞—à –ø—Ä–æ–µ–∫—Ç –Ω–µ —Å–ª—É—á–∞–π–Ω–æ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è "–ú–û–ô–ó–ê–õ–ò–í.–†–§". –ú—ã —Ö–æ—Ç–∏–º, —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π –≥–æ—Ä–æ–∂–∞–Ω–∏–Ω –æ–±—Ä—ë–ª –≤ –ú—É—Ä–º–∞–Ω—Å–∫–µ —Å–≤–æ–π –∑–∞–ª–∏–≤. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –Ω–∞–º –Ω–∞–ø–æ—Å–ª–µ–¥–æ–∫ –æ –≤–∞—à–µ–º –∑–∞–ª–∏–≤–µ! '
        },
    ]

    return (
        <>
            <div
                className={s.steps}
            >
                <div style={{ display: 'flex' }}>
                    {formState.map((x, i) => (
                        <div key={i}
                            style={{
                                position: 'relative'
                            }}
                        >
                            <div className={cx(s.stepButton, x && s.stepButtonComplete, step == i && s.stepButtonNow)}>
                                <Button
                                    theme='link'
                                    key={i}
                                    style={{
                                        outline: 0,
                                        cursor: 'default',
                                    }}
                                // onClick={() => {
                                //     setStep(i)
                                // }}
                                >
                                    <span className={s.stepButtonText}>
                                        {stepButtons[i].button}
                                    </span>
                                </Button>
                            </div>
                            <Arrow
                                className={cx(x && s.stepButtonComplete, step == i && s.stepButtonNow)}
                            />
                        </div>
                    ))}
                </div>
                <p style={{
                    margin: '1rem 0 0 0',
                }}>
                    {stepButtons[step].description}
                </p>
            </div>
            {activeFromComponent()}
        </>
    )
}
