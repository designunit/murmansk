import { Section } from '../Section'
import ImageMarker, { Marker } from 'react-image-marker'
import { useCallback, useState } from 'react'
import { Item } from './item'
import { useForm } from 'react-hook-form'
import { Emoji } from '../Emoji'
import ReactCompareImage from 'react-compare-image'
import s from './index.module.css'
import cx from 'classnames'

export interface MarkerData extends Marker {
    text: string
    itemNumber?: Number
    id: string
    isOpen: boolean
}

export const Markers: React.FC = () => {
    const [markers, setMarkers] = useState<MarkerData[]>([
        {
            top: 10,
            left: 40,
            text: `–ú–æ–π –±–∞—Ç—è –µ–±–∞—à–∏—Ç –≤–æ–æ–±—â–µ –∞–¥–æ–≤—ã–µ –±–ª—é–¥–∞. –ù—É —Ç–∞–∫–æ–π –≤–æ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ
            —Ä–µ—Ü–µ–ø—Ç —É—Å—Ä–µ–¥–Ω–µ–Ω–Ω—ã–π, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤–∞—Ä–∏–∞—Ü–∏–π –º–∞—Å—Å–∞. –ë–µ—Ä–µ—Ç—Å—è —Å—É–ø, –æ–Ω
            –Ω–µ –≥—Ä–µ–µ—Ç—Å—è, –≥—Ä–µ—Ç—å - —ç—Ç–æ –Ω–µ –ø—Ä–æ –º–æ–µ–≥–æ –±–∞—Ç—é. –û–Ω –±–µ—Ä–µ—Ç —ç—Ç–æ —Å—É–ø,
            –≤—ã–≤–∞–ª–∏–≤–∞–µ—Ç –µ–≥–æ –Ω–∞ —Å–∫–æ–≤–æ—Ä–æ–¥—É –∏ –Ω–∞—á–∏–Ω–∞–µ—Ç –∂–∞—Ä–∏—Ç—å. –î–æ–±–∞–≤–ª—è–µ—Ç –≤ –Ω–µ–≥–æ
            –æ–≥—Ä–æ–º–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—É–∫–∞, —á–µ—Å–Ω–æ–∫–∞, –ø–µ—Ä—Ü–∞ —á–µ—Ä–Ω–æ–≥–æ –∏ –∫—Ä–∞—Å–Ω–æ–≥–æ
            –ú–£–ö–ò! –¥–ª—è –≤—è–∑–∫–æ—Å—Ç–∏, —Ç–æ–º–∞—Ç–Ω–∞—è –ø–∞—Å—Ç–∞ —Å–≤–µ—Ä—Ö—É. –í—Å–µ —ç—Ç–æ –∂–∞—Ä–∏—Ç—Å—è –¥–æ
            –¥—ã–º–∞. –ü–æ—Ç–æ–º —Å–Ω–∏–º–∞–µ—Ç—Å—è —Å –æ–≥–Ω—è –∏ –æ—Å—Ç—É–∂–∞–µ—Ç—Å—è –Ω–∞ –±–∞–ª–∫–æ–Ω–µ. –ü–æ—Ç–æ–º –±–∞—Ç—è
            –∑–∞–Ω–æ—Å–∏—Ç –∏ —â–µ–¥—Ä–æ –ø–æ–ª–∏–≤ –º–∞–π–æ–Ω–µ–∑–æ–º –Ω–∞—á–∏–Ω–∞–µ—Ç –µ—Å—Ç—å. –ü—Ä–∏ —ç—Ç–æ–º –µ—Å—Ç —Å–æ
            —Å–∫–æ–≤–æ—Ä–æ–¥—ã —à–∫—Ä—è–±–∞—è –ø–æ –Ω–µ–π –ª–æ–∂–∫–æ–π. –ï—Å—Ç –∏ –ø—Ä–∏–≥–æ–≤–∞—Ä–∏–≤–∞–µ—Ç –ø–æ–ª—É—à–µ–ø–æ—Ç–æ–º
            —É—Ö –±–ª—è. –ü—Ä–∏ —ç—Ç–æ–º —É –Ω–µ–≥–æ –Ω–∞ –ª–±—É –∞–∂ –ø–æ—Ç –≤—ã—Å—Ç—É–ø–∞–µ—Ç. –õ—é–±–µ–∑–Ω–æ –º–Ω–µ
            –∏–Ω–æ–≥–¥–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç, –Ω–æ —è –æ—Ç–∫–∞–∑—ã–≤–∞—é—Å—å. –ù–∞–¥–æ –ª–∏ –≥–æ–≤–æ—Ä–∏—Ç—å –æ —Ç–æ–º
            –∫–∞–∫–æ–π –¥–∏—á–∞–π—à–∏–π –ø–µ—Ä–¥–µ–∂ –ø–æ—Ç–æ–º? –í–æ–Ω–∏—â–∞ —Ç–∞–∫–∞—è, —á—Ç–æ –æ–±–æ–∏ –æ—Ç —Å—Ç–µ–Ω
            –æ—Ç–∫–ª–µ–∏–≤–∞—é—Ç—Å—è.`,
            isOpen: true,
            id: '14',
        },
        {
            top: 33,
            left: 76,
            text: '–±–ª–∏–∑–∫–∞—è —Ç–æ—á–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä—è–ª–∫–∏',
            isOpen: true,
            id: 'iha',
        },
        {
            top: 34,
            left: 70,
            text: '–ø—Ä–æ–≤–µ—Ä—è–ª–∫–∞ –¥–ª—è –±–ª–∏–∑–∫–∏—Ö —Ç–æ—á–µ–∫',
            isOpen: true,
            id: 'rwuth',
        },
    ])
    const onItemClick = useCallback(
        (id: string, state: boolean) => {
            const newMarkers = markers.map((x, i) =>
                x.id === id ? { ...x, isOpen: state } : x
            )
            setMarkers(newMarkers)
        },
        [markers]
    )
    const [draft, setDraft] = useState({ top: null, left: null })
    const [showForm, setShowForm] = useState(false)
    const [showMarkers, setShowMarkers] = useState(false)

    const { register, handleSubmit, reset, errors } = useForm()

    const onSubmit = useCallback(
        (data) => {
            const newMarker = {
                ...draft,
                text: data.text,
                isOpen: true,
                id: 'uyhtg', // generate UNIQUE id
            }
            setMarkers([...markers, newMarker])
            setShowForm(false)
            reset()
        },
        [markers, draft]
    )

    const hideForm = useCallback(() => {
        setShowForm(false)
        reset()
    }, [])

    return (
        <Section>
            <div
                style={{
                    position: 'relative',
                }}
            >
                <div className={s.bg}>
                    <ReactCompareImage
                        leftImage='static/map.png'
                        rightImage='static/meta.jpg'
                        aspectRatio='wider'
                    />
                </div>
                {showMarkers && (
                    <>
                        <ImageMarker
                            src='static/placeholder.png'
                            alt=''
                            markers={markers}
                            onAddMarker={(marker: Marker) => {
                                setDraft(marker)
                                setShowForm(true)
                            }}
                            // @ts-ignore
                            markerComponent={(props: MarkerData) => (
                                <Item {...props} onItemClick={onItemClick} />
                            )}
                        />
                        {showForm && (
                            <div className={s.formContainer} onClick={hideForm}>
                                <form
                                    onSubmit={handleSubmit(onSubmit)}
                                    className={s.form}
                                    onClick={(e) => e.stopPropagation()}
                                >
                                    <div className={s.formHead}>
                                        <span>// –ù–æ–≤–∞—è —Ç–æ—á–∫–∞</span>
                                        <button
                                            style={{
                                                width: 30,
                                                border: 'none',
                                                background: 'white',
                                                cursor: 'pointer',
                                            }}
                                            onClick={hideForm}
                                        >
                                            <Emoji name='‚ùå' />
                                        </button>
                                    </div>
                                    <textarea
                                        name='text'
                                        ref={register({
                                            required: '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ',
                                            maxLength: {
                                                value: 300,
                                                message:
                                                    '–ú–∞–∫—Å–∏–º—É–º 300 —Å–∏–º–≤–æ–ª–æ–≤',
                                            },
                                            minLength: {
                                                value: 6,
                                                message: '–ú–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤',
                                            },
                                        })}
                                        rows={4}
                                        cols={45}
                                        placeholder='–ß—Ç–æ –≤—ã –¥—É–º–∞–µ—Ç–µ?'
                                        style={{
                                            resize: 'none',
                                        }}
                                    />
                                    {errors?.text && (
                                        <p
                                            style={{
                                                color: 'tomato',
                                                fontSize: 12,
                                            }}
                                        >
                                            {errors?.text.message}
                                        </p>
                                    )}
                                    <button type='submit'>
                                        –ü–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ—á–∫—É
                                        <Emoji name='üìç' />
                                    </button>
                                </form>
                            </div>
                        )}
                    </>
                )}
            </div>
            <div
                style={{
                    display: 'flex',
                    justifyContent: 'center',
                    paddingTop: '20px',
                }}
            >
                <button
                    onClick={() => {
                        setShowMarkers(false)
                        setShowForm(false)
                    }}
                    className={cx(
                        s.viewSwitch,
                        !showMarkers && s.viewSwitchActive
                    )}
                >
                    {'–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É '}
                    <Emoji name='‚ÜîÔ∏è' />
                </button>
                <span style={{
                    padding: '.5em'
                }}>
                    //
                </span>
                <button
                    onClick={() => {
                        setShowMarkers(true)
                    }}
                    className={cx(
                        s.viewSwitch,
                        showMarkers && s.viewSwitchActive
                    )}
                >
                    {'–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–¥–µ–∏ '}
                    <Emoji name='üí°' />
                </button>
            </div>
        </Section>
    )
}
